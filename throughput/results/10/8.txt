BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'CHINA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'ASIA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'ECONOMY POLISHED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2206833.31..2206835.14 rows=730 width=38) (actual time=25502.227..25502.228 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=840320 read=173986 dirtied=4198 written=84
   ->  HashAggregate  (cost=2206785.82..2206798.59 rows=730 width=38) (actual time=25502.132..25502.134 rows=2 loops=1)
         Buffers: shared hit=840317 read=173986 dirtied=4198 written=84
         ->  Nested Loop  (cost=502706.70..2206286.06 rows=24988 width=38) (actual time=19048.485..25444.593 rows=24491 loops=1)
               Buffers: shared hit=840317 read=173986 dirtied=4198 written=84
               ->  Nested Loop  (cost=502706.70..2199159.48 rows=24988 width=16) (actual time=19048.406..25304.221 rows=24491 loops=1)
                     Buffers: shared hit=791335 read=173986 dirtied=4198 written=84
                     ->  Hash Join  (cost=502706.70..2191875.07 rows=25015 width=16) (actual time=19048.356..25014.132 rows=24491 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=717717 read=173986 dirtied=4198 written=84
                           ->  Nested Loop  (cost=0.00..1686855.25 rows=412595 width=16) (actual time=0.480..4641.239 rows=403422 loops=1)
                                 Buffers: shared hit=326672 read=149039 dirtied=4198 written=63
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..47082.14 rows=13580 width=4) (actual time=0.384..193.233 rows=13440 loops=1)
                                       Index Cond: (p_type = 'ECONOMY POLISHED NICKEL'::text)
                                       Heap Fetches: 13440
                                       Buffers: shared hit=1859 read=9631 written=3
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.44 rows=31 width=20) (actual time=0.035..0.318 rows=30 loops=13440)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=324813 read=139408 dirtied=4198 written=60
                           ->  Hash  (cost=491191.32..491191.32 rows=921230 width=8) (actual time=19046.140..19046.140 rows=912364 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35640kB
                                 Buffers: shared hit=391042 read=24947 written=21
                                 ->  Hash Join  (cost=139053.67..491191.32 rows=921230 width=8) (actual time=3809.012..18489.353 rows=912364 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=391042 read=24947 written=21
                                       ->  Bitmap Heap Scan on orders  (cost=100023.05..425675.33 rows=4606152 width=12) (actual time=2945.652..6636.799 rows=4557055 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=245641 read=24110 written=21
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98871.51 rows=4606152 width=0) (actual time=2842.646..2842.646 rows=4616605 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=13191
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=862.606..862.606 rows=300270 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             Buffers: shared hit=145401 read=837
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=22.904..749.899 rows=300270 loops=1)
                                                   Buffers: shared hit=145401 read=837
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.028..0.072 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.013 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'ASIA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=21.659..136.904 rows=60054 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=145399 read=837
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=14.440..14.440 rows=60054 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=5 read=831
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.010..0.010 rows=1 loops=24491)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73618
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=24491)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48982
 Total runtime: 25514.544 ms
(64 rows)

COMMIT;
COMMIT
